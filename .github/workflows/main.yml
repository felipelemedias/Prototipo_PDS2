name: Build and Deploy
on:
  - push
  - pull_request

jobs:
  job1:
    runs-on: ubuntu-latest
    environment: pdsi2_database
  
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Clonar repositório
        uses: actions/checkout@v2

      - name: Instalar Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.9"

      - name: Atualizar pip
        run: python -m pip install --upgrade pip

      - name: Instalar dependências
        run: pip install -r requirements.txt

      - name: Criar arquivo .env
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=postgres" >> .env

      - name: Verificando se o PostgreSQL está rodando
        run: |
          for i in {1..30}; do
            nc -z postgres 5432 && echo "PostgreSQL está pronto" && exit 0
            echo "Aguardando PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL não respondeu a tempo" && exit 1

      - name: Definir DATABASE_URL
        run: echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV

      - name: Executar pytest
        run: pytest teste.py
