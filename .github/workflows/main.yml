name: Build and Deploy
on:
  - push
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    environment: pdsi2_database
  
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        ports:
          - 5432:5432
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: instalando o python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: instalar dependencias
        run: pip install -r requirements.txt
      - name: Aguardar PostgreSQL ficar disponível
        run: |
          for i in {1..30}; do
            nc -z postgres 5432 && echo "PostgreSQL está pronto!" && exit 0
            echo "Aguardando PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL não respondeu a tempo!" && exit 1
      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.local
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.local
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.local
          echo "POSTGRES_HOST=postgres" >> .env.local
      - name: Executar pytest
        env:
          DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:5432/${{ secrets.POSTGRES_DB }}
        run: pytest teste.py